{"ast":null,"code":"import _defineProperty from \"/Users/jonhoward/dev/udemy/nextjs-complete-guide/11-blog/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\nvar postsDirectory = path.join(process.cwd(), 'posts');\nexport function getPostsFiles() {\n  return fs.readdirSync(postsDirectory);\n}\nexport function getPostData(postIdentifier) {\n  var postSlug = postIdentifier.replace(/\\.md$/, ''); // removes the file extension\n\n  var filePath = path.join(postsDirectory, \"\".concat(postSlug, \".md\"));\n  var fileContent = fs.readFileSync(filePath, 'utf-8');\n\n  var _matter = matter(fileContent),\n      data = _matter.data,\n      content = _matter.content;\n\n  var postData = _objectSpread(_objectSpread({\n    slug: postSlug\n  }, data), {}, {\n    content: content\n  });\n\n  return postData;\n}\nexport function getAllPosts() {\n  var postFiles = getPostsFiles();\n  var allPosts = postFiles.map(function (postFile) {\n    return getPostData(postFile);\n  });\n  var sortedPosts = allPosts.sort(function (postA, postB) {\n    return postA.date > postB.date ? -1 : 1;\n  });\n  return sortedPosts;\n}\nexport function getFeaturedPosts() {\n  var allPosts = getAllPosts();\n  var featuredPosts = allPosts.filter(function (post) {\n    return post.isFeatured;\n  });\n  return featuredPosts;\n}","map":{"version":3,"sources":["/Users/jonhoward/dev/udemy/nextjs-complete-guide/11-blog/lib/posts-util.js"],"names":["fs","path","matter","postsDirectory","join","process","cwd","getPostsFiles","readdirSync","getPostData","postIdentifier","postSlug","replace","filePath","fileContent","readFileSync","data","content","postData","slug","getAllPosts","postFiles","allPosts","map","postFile","sortedPosts","sort","postA","postB","date","getFeaturedPosts","featuredPosts","filter","post","isFeatured"],"mappings":";;;;;;AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,IAAMC,cAAc,GAAGF,IAAI,CAACG,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,OAAzB,CAAvB;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC9B,SAAOP,EAAE,CAACQ,WAAH,CAAeL,cAAf,CAAP;AACD;AAED,OAAO,SAASM,WAAT,CAAqBC,cAArB,EAAqC;AAC1C,MAAMC,QAAQ,GAAGD,cAAc,CAACE,OAAf,CAAuB,OAAvB,EAAgC,EAAhC,CAAjB,CAD0C,CACY;;AACtD,MAAMC,QAAQ,GAAGZ,IAAI,CAACG,IAAL,CAAUD,cAAV,YAA6BQ,QAA7B,SAAjB;AACA,MAAMG,WAAW,GAAGd,EAAE,CAACe,YAAH,CAAgBF,QAAhB,EAA0B,OAA1B,CAApB;;AAH0C,gBAIhBX,MAAM,CAACY,WAAD,CAJU;AAAA,MAIlCE,IAJkC,WAIlCA,IAJkC;AAAA,MAI5BC,OAJ4B,WAI5BA,OAJ4B;;AAM1C,MAAMC,QAAQ;AACZC,IAAAA,IAAI,EAAER;AADM,KAETK,IAFS;AAGZC,IAAAA,OAAO,EAAPA;AAHY,IAAd;;AAMA,SAAOC,QAAP;AACD;AAED,OAAO,SAASE,WAAT,GAAuB;AAC5B,MAAMC,SAAS,GAAGd,aAAa,EAA/B;AAEA,MAAMe,QAAQ,GAAGD,SAAS,CAACE,GAAV,CAAc,UAAAC,QAAQ,EAAI;AACzC,WAAOf,WAAW,CAACe,QAAD,CAAlB;AACD,GAFgB,CAAjB;AAIA,MAAMC,WAAW,GAAGH,QAAQ,CAACI,IAAT,CAAc,UAACC,KAAD,EAAQC,KAAR;AAAA,WAAkBD,KAAK,CAACE,IAAN,GAAaD,KAAK,CAACC,IAAnB,GAA0B,CAAC,CAA3B,GAA+B,CAAjD;AAAA,GAAd,CAApB;AAEA,SAAOJ,WAAP;AACD;AAED,OAAO,SAASK,gBAAT,GAA4B;AACjC,MAAMR,QAAQ,GAAGF,WAAW,EAA5B;AAEA,MAAMW,aAAa,GAAGT,QAAQ,CAACU,MAAT,CAAgB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,UAAT;AAAA,GAApB,CAAtB;AAEA,SAAOH,aAAP;AACD","sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nimport matter from 'gray-matter';\n\nconst postsDirectory = path.join(process.cwd(), 'posts');\n\nexport function getPostsFiles() {\n  return fs.readdirSync(postsDirectory);\n}\n\nexport function getPostData(postIdentifier) {\n  const postSlug = postIdentifier.replace(/\\.md$/, ''); // removes the file extension\n  const filePath = path.join(postsDirectory, `${postSlug}.md`);\n  const fileContent = fs.readFileSync(filePath, 'utf-8');\n  const { data, content } = matter(fileContent);\n\n  const postData = {\n    slug: postSlug,\n    ...data,\n    content\n  };\n\n  return postData;\n}\n\nexport function getAllPosts() {\n  const postFiles = getPostsFiles();\n\n  const allPosts = postFiles.map(postFile => {\n    return getPostData(postFile);\n  });\n\n  const sortedPosts = allPosts.sort((postA, postB) => postA.date > postB.date ? -1 : 1);\n\n  return sortedPosts;\n}\n\nexport function getFeaturedPosts() {\n  const allPosts = getAllPosts();\n\n  const featuredPosts = allPosts.filter(post => post.isFeatured);\n\n  return featuredPosts;\n}\n"]},"metadata":{},"sourceType":"module"}